plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.9'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'bottlenote-batch'
version = '0.0.1-SNAPSHOT'


sourceCompatibility = '17'
targetCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


allprojects {
    group = 'bottlenote-batch'
    version = '0.0.1-SNAPSHOT'

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'

    sourceCompatibility = '17'
    targetCompatibility = '17'

    repositories {
        mavenCentral()
    }

    java {
        sourceCompatibility = '17'
        targetCompatibility = '17'
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        //apache commons
        implementation 'org.apache.commons:commons-lang3:3.12.0'

        // lombok
        implementation 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    bootJar.enabled = false
    jar.enabled = true

    tasks.named('test') { // 테스트할 때 junit5로 하겠다는 의미
        useJUnitPlatform()
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}
springBoot {
    mainClass = 'app.BatchApplication'
}

tasks.named("bootRun") {
    mainClass = 'app.BatchApplication'
}
